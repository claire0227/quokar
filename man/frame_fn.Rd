% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/frame_fn.R
\name{frame_fn}
\alias{frame_fn}
\title{Function to create data frame to plot the fitting path of quantile
regression using interior point method}
\usage{
frame_fn(y, x, tau)
}
\arguments{
\item{y}{dependent variable in quantile regression}

\item{x}{design matrix in quantile regression}

\item{tau}{quantiles}
}
\description{
Function to create data frame to plot the fitting path of quantile
regression using interior point method
}
\details{
This function used to illustrate the fitting process of
quantile regression using interior point method.
Koenker and Bassett(1978) introduced asymmetric weight on positive
and negative residuals, and solves the slightly modified l1-problem.

$$min_{b \in R^{p}}\sum_{i=1}^{n}\rho_{\tau}(y_i-x_{i}^{'}b)$$

where $\rho_{\tau}(r)=r[\tau-I(r<0)]$ for $\tau \in (0,1)$. This
yields the modified linear program

$$min(\tau e^{'}u+(1-\tau)e^{'}v|y=Xb+u-v,(u,v) \in R_{+}^{2n})$$

Adding slack variables, $s$, satisfying the constrains $a+s=e$, we
obtain the barrier function

$$B(a, s, u) = y^{'}a+\mu \sum_{i=1}^{n}(loga_{i}+logs_{i})$$

which should be maximized subject to the constrains
$X^{'}a=(1-\tau)X^{'}e$ and $a+s=e$. The Newton step $\delta_{a}$
solving

$$max{y^{'}\delta_{a}+\mu \delta^{'}_{a}(A^{-1}-S^{-1})e-
\frac{1}{2}\mu \delta_{a}^{'}(A^{-2}+S^{-2})\delta_{a}}$$

subject to $X{'}\delta_{a}=0$, satisfies

$$y+\mu(A^{-1}-S^{-1})e-\mu(A^{-2}+S^{-2})\delta_{a}=Xb$$

for some $b\in R^{p}$, and \delta_{a}$ such that $X^{'}\delta_{a}=0$.
Using the constraint, we can solve explicitly for the vector $b$,

$$b=(X^{'}WX)^{-1}X^{'}W[y+\mu (A^{-1}-S^{-1})e]$$

where $W=(A^{-2}+S^{-2})^{-1}$. This is a form of the primal log
barrier algorithm described above. Setting $\mu=0$ in each step
yields an affine scaling variant of the algorithm. The basic linear
algebra of each iteration is essentially unchanged, only the form
of the diagonal weighting matrix $W$ has chagned.
}
\examples{
data(ais)
y <- ais$BMI
x <- cbind(1, ais$LBM)
tau <- c(0.1, 0.5, 0.9)
frame_fn <- frame_fn(y, x, tau)
#plot the path
frame_fn_0.1 <- frame_fn[[1]]
ggplot(frame_fn_0.1, aes(x = value, y = objective)) +
   geom_point() +
   geom_wrap() +
   facet_wrap(~ variable, scale = 'free')


}
\references{
Portnoy S, Koenker R. The Gaussian hare and the Laplacian tortoise:
computability of squared-error versus absolute-error estimators[J].
Statistical Science, 1997, 12(4): 279-300.
}
